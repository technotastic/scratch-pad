<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Live Markdown Previewer w/ Cheat Sheet</title>

    <!-- Marked.js for Markdown parsing -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

    <!-- DOMPurify for sanitizing HTML output (Security) -->
    <script src="https://cdn.jsdelivr.net/npm/dompurify@2.4.0/dist/purify.min.js"></script>

    <!-- highlight.js for syntax highlighting in preview -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/github-dark.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js"></script>

    <style>
        :root {
            --bg-color: #f0f0f0;
            --editor-bg: #ffffff;
            --preview-bg: #ffffff;
            --text-color: #333;
            --border-color: #ccc;
            --header-bg: #4a4a6a;
            --header-text: #f0f0f0;
            --link-color: #0366d6;
            --code-bg: #f6f8fa;
            --code-text: #333;
            --pre-bg: #f6f8fa;
            --modal-bg: rgba(0, 0, 0, 0.6);
            --modal-content-bg: #ffffff;
            --modal-content-text: #333;
            --modal-code-bg: #eee;
            --button-bg: #0366d6;
            --button-text: #ffffff;
            --button-hover-bg: #005cc5;
        }

        @media (prefers-color-scheme: dark) {
            :root {
                --bg-color: #1a1a2e;
                --editor-bg: #2a2a3e;
                --preview-bg: #2a2a3e;
                --text-color: #e0e0e0;
                --border-color: #4a4a6a;
                --header-bg: #3a3a5a;
                --header-text: #e0e0e0;
                --link-color: #58a6ff;
                --code-bg: #161b22;
                --code-text: #c9d1d9;
                --pre-bg: #161b22;
                --modal-bg: rgba(0, 0, 0, 0.7);
                --modal-content-bg: #2a2a3e;
                --modal-content-text: #e0e0e0;
                --modal-code-bg: #3a3a5a;
                --button-bg: #58a6ff;
                --button-text: #1a1a2e;
                --button-hover-bg: #80b6ff;
            }
        }

        /* Basic Reset & Body */
        body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
            background-color: var(--bg-color);
            color: var(--text-color);
            display: flex;
            flex-direction: column;
            height: 100vh;
            overflow: hidden; /* Prevent body scroll */
        }

        /* Header */
        header {
            background-color: var(--header-bg);
            color: var(--header-text);
            padding: 10px 20px;
            display: flex; /* Use flex for alignment */
            justify-content: space-between; /* Space title and button */
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            z-index: 10;
        }
        header h1 {
            margin: 0;
            font-size: 1.5em;
        }

        /* Main Container */
        .container {
            display: flex;
            flex-grow: 1; /* Take remaining height */
            overflow: hidden; /* Prevent container overflow */
            background-color: var(--bg-color);
            padding: 10px;
            gap: 10px;
        }

        /* Editor and Preview Panes */
        .pane {
            flex: 1; /* Each pane takes half the width */
            background-color: var(--editor-bg);
            border: 1px solid var(--border-color);
            border-radius: 5px;
            display: flex; /* Use flex column for internal structure */
            flex-direction: column;
            overflow: hidden; /* Hide internal overflow */
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .pane-header {
            padding: 8px 12px;
            font-weight: bold;
            border-bottom: 1px solid var(--border-color);
            background-color: var(--bg-color); /* Slightly different bg for header */
            font-size: 0.9em;
            color: var(--text-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #editor {
            flex-grow: 1; /* Textarea fills the pane */
            border: none;
            padding: 15px;
            font-family: "Consolas", "Monaco", "Courier New", monospace;
            font-size: 14px;
            line-height: 1.5;
            resize: none; /* Disable manual resize */
            outline: none;
            background-color: var(--editor-bg);
            color: var(--text-color);
            width: 100%; /* Ensure full width */
            box-sizing: border-box; /* Include padding in width */
        }

        #preview {
            flex-grow: 1; /* Preview div fills the pane */
            padding: 15px;
            overflow-y: auto; /* Allow scrolling only for preview content */
            background-color: var(--preview-bg);
            color: var(--text-color);
            word-wrap: break-word;
        }

        /* Markdown Content Styling (Basic GitHub-like styles) */
        #preview > *:first-child { margin-top: 0; }
        #preview h1, #preview h2, #preview h3, #preview h4, #preview h5, #preview h6 { margin-top: 24px; margin-bottom: 16px; font-weight: 600; line-height: 1.25; border-bottom: 1px solid var(--border-color); padding-bottom: 0.3em;}
        #preview h1 { font-size: 2em; }
        #preview h2 { font-size: 1.5em; }
        #preview h3 { font-size: 1.25em; }
        #preview p { margin-top: 0; margin-bottom: 16px; }
        #preview a { color: var(--link-color); text-decoration: none; }
        #preview a:hover { text-decoration: underline; }
        #preview ul, #preview ol { margin-top: 0; margin-bottom: 16px; padding-left: 2em; }
        #preview blockquote { margin: 0 0 16px 0; padding: 0 1em; color: #6a737d; border-left: 0.25em solid var(--border-color); }
        @media (prefers-color-scheme: dark) {
             #preview blockquote { color: #8b949e; }
        }
        #preview code {
            padding: 0.2em 0.4em;
            margin: 0;
            font-size: 85%;
            background-color: var(--code-bg);
            border-radius: 3px;
            font-family: "Consolas", "Monaco", "Courier New", monospace;
            color: var(--code-text);
        }
        #preview pre {
            padding: 16px;
            overflow: auto;
            font-size: 85%;
            line-height: 1.45;
            background-color: var(--pre-bg);
            border-radius: 3px;
            margin-bottom: 16px;
            word-wrap: normal; /* Prevent wrapping in code blocks */
        }
        #preview pre code {
            display: inline; padding: 0; margin: 0; overflow: visible; line-height: inherit;
            word-wrap: normal; background-color: transparent; border: 0; color: inherit;
        }
        #preview img { max-width: 100%; height: auto; }
        #preview table { border-collapse: collapse; margin-bottom: 16px; display: block; width: max-content; max-width: 100%; overflow: auto;}
        #preview th, #preview td { border: 1px solid var(--border-color); padding: 6px 13px; }
        #preview th { font-weight: 600; }
        #preview hr { height: 0.25em; padding: 0; margin: 24px 0; background-color: var(--border-color); border: 0; }
        #preview del { color: #6a737d; } /* Strikethrough */
        @media (prefers-color-scheme: dark) { #preview del { color: #8b949e; } }
        #preview ul li.task-list-item { list-style-type: none; } /* Task lists */
        #preview input[type="checkbox"] { margin: 0 0.2em 0.25em -1.6em; vertical-align: middle; }


        /* Utility Buttons (Copy, Cheat Sheet) */
        .utility-button {
            background-color: var(--button-bg);
            color: var(--button-text);
            border: none;
            padding: 6px 12px;
            font-size: 0.9em;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s ease;
            margin-left: 5px; /* Spacing between buttons */
        }
        .utility-button:hover {
            background-color: var(--button-hover-bg);
        }
        .utility-button:active {
            filter: brightness(90%);
        }

        /* Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: var(--modal-bg);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s ease;
        }
        .modal-overlay.active {
            opacity: 1;
            pointer-events: auto;
        }
        .modal-content {
            background-color: var(--modal-content-bg);
            color: var(--modal-content-text);
            padding: 25px;
            border-radius: 8px;
            max-width: 90%;
            width: 700px; /* Max width for the modal */
            max-height: 85vh;
            overflow-y: auto;
            position: relative;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            transform: scale(0.95);
            transition: transform 0.3s ease;
        }
        .modal-overlay.active .modal-content {
            transform: scale(1);
        }
        .modal-close-button {
            position: absolute;
            top: 10px;
            right: 15px;
            background: none;
            border: none;
            font-size: 1.8em;
            color: var(--modal-content-text);
            cursor: pointer;
            line-height: 1;
            padding: 0;
            opacity: 0.7;
        }
        .modal-close-button:hover {
            opacity: 1;
        }
        .modal-content h2 {
            margin-top: 0;
            margin-bottom: 20px;
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 10px;
        }
        .modal-content h3 {
            margin-top: 20px;
            margin-bottom: 8px;
            font-size: 1.1em;
        }
        .modal-content pre {
            background-color: var(--modal-code-bg);
            padding: 10px;
            border-radius: 4px;
            overflow-x: auto;
            font-size: 0.9em;
            margin-bottom: 10px;
        }
        .modal-content code {
             font-family: "Consolas", "Monaco", "Courier New", monospace;
        }


        /* Responsive Layout */
        @media (max-width: 768px) {
            header h1 { font-size: 1.2em; }
            .container {
                flex-direction: column;
                height: auto; /* Allow content to determine height */
                overflow-y: auto; /* Allow scrolling on mobile */
            }
            .pane {
                height: 50vh; /* Give each pane roughly half the viewport height */
                min-height: 250px; /* Ensure minimum usable height */
                flex-basis: auto; /* Reset flex basis */
            }
             body {
                 height: auto; /* Allow body to grow */
                 overflow-y: auto; /* Allow body scroll on mobile */
            }
            .modal-content { width: 90%; }
        }

    </style>
</head>
<body>
    <header>
        <h1>Live Markdown Previewer</h1>
        <button id="cheatSheetButton" class="utility-button">Cheat Sheet</button>
    </header>

    <div class="container">
        <div class="pane">
            <div class="pane-header">Markdown Input</div>
            <textarea id="editor" spellcheck="false" placeholder="Type your Markdown here..."></textarea>
        </div>
        <div class="pane">
             <div class="pane-header">
                <span>HTML Preview</span>
                <button id="copyHtmlButton" class="utility-button" title="Copy HTML Output">Copy HTML</button>
            </div>
            <div id="preview"></div>
        </div>
    </div>

    <!-- Cheat Sheet Modal -->
    <div id="cheatSheetModal" class="modal-overlay">
        <div class="modal-content">
            <button id="modalCloseButton" class="modal-close-button" aria-label="Close modal">×</button>
            <h2>Markdown Cheat Sheet</h2>

            <h3>Headers</h3>
            <pre><code># H1 Header
## H2 Header
### H3 Header
#### H4 Header
##### H5 Header
###### H6 Header</code></pre>

            <h3>Emphasis</h3>
            <pre><code>*Italic text* or _Italic text_
**Bold text** or __Bold text__
***Bold and Italic*** or ___Bold and Italic___
~~Strikethrough text~~</code></pre>

            <h3>Lists</h3>
            <pre><code>**Unordered List:**
* Item 1
* Item 2
  * Nested Item 2a
  * Nested Item 2b

**Ordered List:**
1. First item
2. Second item
3. Third item</code></pre>

            <h3>Links</h3>
            <pre><code>[Link Text](https://www.example.com "Optional Title")
<https://www.automatic-link.com></code></pre>

            <h3>Images</h3>
            <pre><code>![Alt text](/path/to/image.jpg "Optional Title")</code></pre>

            <h3>Code</h3>
            <pre><code>Inline `code` snippet.

```javascript
// Code block with syntax highlighting
function example(arg) {
  return arg * 2;
}
# Plain code block
No highlighting here.
```</code></pre>

            <h3>Blockquotes</h3>
            <pre><code>> This is a blockquote.
> It can span multiple lines.
>
> > Nested blockquote.</code></pre>

            <h3>Tables (GFM)</h3>
            <pre><code>| Header 1 | Header 2 | Header 3 |
| :------- | :------: | -------: |
| Align L  | Center   | Align R  |
| Cell 1   | Cell 2   | Cell 3   |</code></pre>

            <h3>Task Lists (GFM)</h3>
            <pre><code>* [x] Completed task
* [ ] Incomplete task
* [ ] Another task</code></pre>

            <h3>Horizontal Rule</h3>
            <pre><code>---
***
___</code></pre>

        </div>
    </div>


    <script>
        const editor = document.getElementById('editor');
        const preview = document.getElementById('preview');
        const copyButton = document.getElementById('copyHtmlButton');
        const cheatSheetButton = document.getElementById('cheatSheetButton');
        const modalOverlay = document.getElementById('cheatSheetModal');
        const modalCloseButton = document.getElementById('modalCloseButton');

        // Configure Marked.js
        marked.setOptions({
            renderer: new marked.Renderer(),
            highlight: function(code, lang) {
                const language = hljs.getLanguage(lang) ? lang : 'plaintext';
                try {
                    return hljs.highlight(code, { language, ignoreIllegals: true }).value;
                } catch (error) {
                    console.error("Highlight.js error:", error);
                    return hljs.highlight(code, { language: 'plaintext', ignoreIllegals: true }).value; // Fallback
                }
            },
            pedantic: false,
            gfm: true, // Enable GitHub Flavored Markdown (includes tables, task lists, strikethrough)
            breaks: false, // Use GFM line breaks (requires double space or actual newline)
            sanitize: false, // Disable Marked's sanitizer; using DOMPurify
            smartLists: true,
            smartypants: false,
            xhtml: false
        });

        // Function to update the preview
        function updatePreview() {
            const markdownText = editor.value;
            try {
                // Parse Markdown to HTML using Marked.js
                const rawHtml = marked.parse(markdownText);
                // Sanitize the HTML using DOMPurify to prevent XSS attacks
                const cleanHtml = DOMPurify.sanitize(rawHtml);
                // Update the preview pane's content
                preview.innerHTML = cleanHtml;
            } catch (error) {
                console.error("Markdown Parsing Error:", error);
                preview.innerHTML = `<p style="color: red;">Error parsing Markdown. Check console for details.</p>`;
            }
        }

        // Function to copy HTML to clipboard
        function copyHtml() {
            const htmlToCopy = preview.innerHTML;
            navigator.clipboard.writeText(htmlToCopy).then(() => {
                copyButton.textContent = 'Copied!';
                setTimeout(() => { copyButton.textContent = 'Copy HTML'; }, 1500);
            }).catch(err => {
                console.error('Failed to copy HTML: ', err);
                copyButton.textContent = 'Error!';
                 setTimeout(() => { copyButton.textContent = 'Copy HTML'; }, 1500);
            });
        }

        // --- Modal Logic ---
        function openModal() {
            modalOverlay.classList.add('active');
        }

        function closeModal() {
            modalOverlay.classList.remove('active');
        }

        // --- Event Listeners ---
        editor.addEventListener('input', updatePreview);
        copyButton.addEventListener('click', copyHtml);
        cheatSheetButton.addEventListener('click', openModal);
        modalCloseButton.addEventListener('click', closeModal);
        // Close modal if clicking on the background overlay
        modalOverlay.addEventListener('click', (event) => {
            if (event.target === modalOverlay) {
                closeModal();
            }
        });
        // Close modal with Escape key
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && modalOverlay.classList.contains('active')) {
                closeModal();
            }
        });


        // --- Initial Load ---
        // Expanded default Markdown text
        editor.value = `# Welcome! - Markdown Previewer

This previewer supports **GitHub Flavored Markdown (GFM)**.

## Basic Formatting
You can use *italics*, **bold**, ***bold italics***, and ~~strikethrough~~.

## Lists
### Unordered
* Create lists using asterisks...
* ...or hyphens.
  - Indent for sub-lists.

### Ordered
1. First item
2. Second item
3. Third item

### Task Lists (GFM)
- [x] This task is complete
- [ ] This task is not

## Links & Images
[Visit GitHub](https://github.com)
![Markdown Logo](https://markdown-here.com/img/icon256.png "Markdown Logo")

## Code
Inline \`code\` looks like this.

\`\`\`python
# Code block example
def fibonacci(n):
    a, b = 0, 1
    while a < n:
        print(a, end=' ')
        a, b = b, a+b
    print()

fibonacci(100)
\`\`\`

## Blockquotes
> "The advance of technology is based on making it fit in so that you don't really even notice it, so it's part of everyday life."
> \- Bill Gates

## Tables (GFM)
| Feature         | Support | Notes                     |
| :-------------- | :-----: | :------------------------ |
| Headers         |   ✅    | Required                  |
| Alignment       |   ✅    | Use colons (\`:\`)         |
| Inline Markdown |   ✅    | *Emphasis*, \`code\`, etc. |

## Horizontal Rule
---

Try editing this text or pasting your own Markdown! Use the **Cheat Sheet** button for help.
`;

        // Initial preview rendering
        updatePreview();

    </script>

</body>
</html>
